/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author divyp
 */
public class PriorityNonP extends javax.swing.JFrame {

    /**
     * Creates new form Priority
     */
    public PriorityNonP() {
        initComponents();
    }
    dataMobility m;
    public PriorityNonP(dataMobility a){
        initComponents();
        m=a;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Remove = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        bt1 = new javax.swing.JTextField();
        iobt = new javax.swing.JTextField();
        bt2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        AT = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        Execute = new javax.swing.JButton();
        P = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        riobt = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        fetchData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Priority Non-Preamptive Scheduling");

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        Remove.setText("Remove");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bt1.setText("BT");
        bt1.setToolTipText("");
        bt1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bt1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bt1FocusLost(evt);
            }
        });
        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });

        iobt.setText("I/O BT");
        iobt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                iobtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                iobtFocusLost(evt);
            }
        });
        iobt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iobtActionPerformed(evt);
            }
        });

        bt2.setText("BT");
        bt2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bt2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bt2FocusLost(evt);
            }
        });
        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P. No.", "Priority", "A.T.", "B.T. 1", "I/O B.T.", "B.T. 2", "C.T.", "T.A.T.", "W.T."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);

        AT.setText("AT");
        AT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ATFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ATFocusLost(evt);
            }
        });

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Execute.setText("Execute");
        Execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteActionPerformed(evt);
            }
        });

        P.setText("Priority");
        P.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PFocusLost(evt);
            }
        });
        P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PActionPerformed(evt);
            }
        });

        jLabel1.setText("0 - L, 1 - H");

        panel.setLayout(new java.awt.BorderLayout());

        riobt.setText("Remove I/O B.T.");
        riobt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riobtActionPerformed(evt);
            }
        });

        jButton3.setText("Remove B.T. 2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        fetchData.setText("Fetch Data");
        fetchData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addComponent(AT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(iobt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(55, 55, 55)
                        .addComponent(fetchData))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Remove)
                            .addGap(18, 18, 18)
                            .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(riobt)
                            .addGap(18, 18, 18)
                            .addComponent(jButton3))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(Execute, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Add)
                        .addComponent(Execute)
                        .addComponent(fetchData))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iobt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Remove)
                    .addComponent(Clear)
                    .addComponent(riobt)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    boolean f = true;
    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        int r = jTable.getModel().getRowCount();
        model.removeRow(r-1);
        pid--;
    }//GEN-LAST:event_RemoveActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        int r = jTable.getModel().getRowCount();
        model.setRowCount(0);
        pid = 1;
    }//GEN-LAST:event_ClearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mainPage jfrm2= new mainPage(m);
        jfrm2.setVisible(true);
        this.setVisible(false);
        this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bt1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bt1FocusGained
        // TODO add your handling code here:
        bt1.setText("");
    }//GEN-LAST:event_bt1FocusGained

    private void bt1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bt1FocusLost
        // TODO add your handling code here:
        if(bt1.getText().equals("")){
            bt1.setText("BT");
        }
    }//GEN-LAST:event_bt1FocusLost

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt1ActionPerformed

    private void iobtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_iobtFocusGained
        // TODO add your handling code here:
        iobt.setText("");
    }//GEN-LAST:event_iobtFocusGained

    private void iobtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_iobtFocusLost
        // TODO add your handling code here:
        if(iobt.getText().equals("")){
            iobt.setText("I/O BT");
        }
    }//GEN-LAST:event_iobtFocusLost

    private void iobtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iobtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iobtActionPerformed

    private void bt2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bt2FocusGained
        // TODO add your handling code here:
        bt2.setText("");
    }//GEN-LAST:event_bt2FocusGained

    private void bt2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bt2FocusLost
        // TODO add your handling code here:
        if(bt2.getText().equals("")){
            bt2.setText("BT");
        }
    }//GEN-LAST:event_bt2FocusLost

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt2ActionPerformed

    private void ATFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ATFocusGained
        // TODO add your handling code here:
        AT.setText("");
    }//GEN-LAST:event_ATFocusGained

    private void ATFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ATFocusLost
        // TODO add your handling code here:
        if(AT.getText().equals("")){
            AT.setText("AT");
        }
    }//GEN-LAST:event_ATFocusLost
    int pid = 1;
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        String p = P.getText();
        String at = AT.getText();
        String bta = bt1.getText();
        String iobta = iobt.getText();
        String btb = bt2.getText();
        if(p.equals("Priority")|p.equals("")){
            p = "0";
        }
        if(at.equals("AT")|at.equals("")){
            at = "0";
        }
        if(bta.equals("BT")|bta.equals("")){
            bta = "0";
        }
        if(btb.equals("BT")|btb.equals("")){
            btb = "0";
        }
        if(iobta.equals("I/O BT")|iobta.equals("")){
            iobta = "0";
        }
        //        System.out.println(bta+" "+iobta+" "+btb);
        String[] row = new String[6];
        row[0] = Integer.toString(pid);
        row[1] = p;
        row[2] = at;
        row[3] = bta;
        row[4] = iobta;
        row[5] = btb;
        pid++;
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        model.addRow(row);
        P.setText("Priority");
        bt1.setText("BT");
        iobt.setText("I/O BT");
        bt2.setText("BT");
        AT.setText("AT");
        //        System.out.println(jTable.getModel().getValueAt(0, 0));
    }//GEN-LAST:event_AddActionPerformed

    private void ExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        int r = jTable.getModel().getRowCount();
        int[] p = new int[r];
        int[] at = new int[r];
        int[] atn = new int[r];
        int[] bta = new int[r];
        int[] iobt = new int[r];
        int[] btb = new int[r];
        int[] ct = new int[r];
        boolean[] flag = new boolean[r];
        boolean[] flag1 = new boolean[r];
        boolean[] flag2 = new boolean[r];
        List<Integer> q = new LinkedList<>();
        //        int[] q = new int[r];
        for(int i=0;i<r;i++){
            p[i] = Integer.valueOf((String) model.getValueAt(i,1));
            atn[i]=at[i]= Integer.valueOf((String) model.getValueAt(i,2));
            bta[i] = Integer.valueOf((String) model.getValueAt(i,3));
            iobt[i] = Integer.valueOf((String) model.getValueAt(i,4));
            btb[i] = Integer.valueOf((String) model.getValueAt(i,5));
        }
        for(int i=0;i<r;i++){
            flag[i] = true;
            flag1[i] = true;
            flag2[i] = true;
        }
        int time=0;
        int cb = 0;
        boolean wflag = true;
        while(wflag){
            int y=0;
            while(y<r){
                if(at[y]==time){
                    q.add(y);
                }
                y++;
            }
            if(!q.isEmpty()){
                int x = 0;
                int pr = 0;
                int i = 0;
                while(x<q.size()){
                    if(pr<p[q.get(x)]){
                        pr = p[q.get(x)];
                        i = x;
                    }
                    x++;
                }
//                int i = q.peek();
//                System.out.println("timeqf = "+time);
                if(time>=cb){
//                    q.remove();
                    i = q.remove(i);
//                    System.out.println("in");
                    if(flag[i]){
//                        System.out.println("in1");
                        if(btb[i]==0){
                            ct[i] = time + iobt[i]+bta[i];
                            flag2[i] = false;
                            flag1[i] = false;
                            
                        }
                        else{
                            at[i] = time + iobt[i] + bta[i];
                        }
                        flag[i] = false;
                        cb = time + bta[i];
//                        System.out.println("cb = "+cb);
                    }
                    else{
                        if(flag2[i]){
//                                                  System.out.println("in2");
                            ct[i] = time + btb[i];
                            flag1[i] = false;
                            cb = time + btb[i];
                        }
                    }
                }
                //                System.out.println("PID  = "+i);
            }
//            else{            
//                System.out.println("timeqe = "+time);
//            }
            //            System.out.println("cb = " +cb +"   ");
            time++;
            for(int j=0;j<r;j++){
                if(!flag[j]&&!flag1[j]&&q.isEmpty()){
                    wflag = false;
                }
                else{
                    wflag = true;
                    break;
                }
            }
        }
        model.setRowCount(0);
        int[] tat = new int[r];  
        for(int i=0;i<r;i++){
            String[] row = new String[9];
            row[0] = Integer.toString(i+1);
            row[1] = Integer.toString(p[i]);
            row[2] = Integer.toString(atn[i]);
            row[3] = Integer.toString(bta[i]);
            row[4] = Integer.toString(iobt[i]);
            row[5] = Integer.toString(btb[i]);
            row[6] = Integer.toString(ct[i]);
            tat[i] = ct[i]-atn[i];
            row[7] = Integer.toString(tat[i]);
            row[8] = Integer.toString(Integer.parseInt(row[7]) - bta[i] - btb[i]);
            model.addRow(row);
        }
                drawGraph(tat);
                if(f){
                 m.fetchData(atn, bta, iobt, btb,p);
                }
                else{
                    f=true;
                }
    }//GEN-LAST:event_ExecuteActionPerformed
private void drawGraph(int[] in){
//        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int i=0;
        while(i<in.length){
            dataset.setValue(in[i], "", Integer.toString(i+1));
//            System.out.println(in[i]);
            i++;
        }
        JFreeChart chart = ChartFactory.createBarChart("Priority (NonP)", "Process number", "Turn Around Time", dataset);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.RED);
        
        ChartPanel chartPanel = new ChartPanel(chart);
        panel.removeAll();
        panel.add(chartPanel , BorderLayout.CENTER);
        panel.validate();
    }
    private void PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PActionPerformed

    private void PFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PFocusGained
        // TODO add your handling code here:
        P.setText("");
    }//GEN-LAST:event_PFocusGained

    private void PFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PFocusLost
        // TODO add your handling code here:
        if(P.getText().equals("")){
            P.setText("Priority");
        }
    }//GEN-LAST:event_PFocusLost

    private void riobtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riobtActionPerformed
        // TODO add your handling code here:
        f = false;
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        int r = jTable.getModel().getRowCount();
        if(r==0){
            return;
        }
        String[] p = new String[r];
        String[] at = new String[r];
        String[] bta = new String[r];
        String[] btb = new String[r];
        String[] ct = new String[r];
        String[] tat = new String[r];
        String[] wt = new String[r];
        for(int i=0;i<r;i++){
            p[i] = (String) model.getValueAt(i,1);
            at[i]= (String) model.getValueAt(i,2);
            bta[i] = (String) model.getValueAt(i,3);
            btb[i] = (String) model.getValueAt(i,5);
            ct[i] = (String) model.getValueAt(i,6);
            tat[i] = (String) model.getValueAt(i,7);
            wt[i] = (String) model.getValueAt(i,8);
        }
        model.setRowCount(0);
        for(int i=0;i<r;i++){
            String[] row = new String[9];
            row[0] = Integer.toString(i+1);
            row[1] = p[i];
            row[2] = at[i];
            row[3] = bta[i];
            row[4] = Integer.toString(0);
            row[5] = btb[i];
            row[6] = ct[i];
            row[7] = tat[i];
            row[8] = wt[i];
            model.addRow(row);
        }
    }//GEN-LAST:event_riobtActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        f = false;
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        int r = jTable.getModel().getRowCount();
        if(r==0){
            return;
        }
        String[] p = new String[r];
        String[] at = new String[r];
        String[] bta = new String[r];
        String[] ibt = new String[r];
        String[] ct = new String[r];
        String[] tat = new String[r];
        String[] wt = new String[r];
        for(int i=0;i<r;i++){
            p[i] = (String) model.getValueAt(i,1);
            at[i]= (String) model.getValueAt(i,2);
            bta[i] = (String) model.getValueAt(i,3);
            ibt[i] = (String) model.getValueAt(i,4);
            ct[i] = (String) model.getValueAt(i,6);
            tat[i] = (String) model.getValueAt(i,7);
            wt[i] = (String) model.getValueAt(i,8);
        }
        model.setRowCount(0);
        for(int i=0;i<r;i++){
            String[] row = new String[9];
            row[0] = Integer.toString(i+1);
            row[1] = p[i];
            row[2] = at[i];
            row[3] = bta[i];
            row[4] = ibt[i];
            row[5] = Integer.toString(0);
            row[6] = ct[i];
            row[7] = tat[i];
            row[8] = wt[i];
            model.addRow(row);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void fetchDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchDataActionPerformed
        // TODO add your handling code here:
        String[][] ta = m.getData();
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        model.setRowCount(0);
        int r = ta[0].length;
        for(int i=0;i<r;i++){
            String[] row = new String[9];
            row[0] = Integer.toString(i+1);
            row[1] = ta[4][i]; 
            row[2] = ta[0][i];
            row[3] = ta[1][i];
            row[4] = ta[2][i];
            row[5] = ta[3][i];
            row[6] = null;
            row[7] = null;
            row[8] = null;
            model.addRow(row);
        }
    }//GEN-LAST:event_fetchDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PriorityNonP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PriorityNonP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PriorityNonP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PriorityNonP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PriorityNonP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AT;
    private javax.swing.JButton Add;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Execute;
    private javax.swing.JTextField P;
    private javax.swing.JButton Remove;
    private javax.swing.JTextField bt1;
    private javax.swing.JTextField bt2;
    private javax.swing.JButton fetchData;
    private javax.swing.JTextField iobt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JPanel panel;
    private javax.swing.JButton riobt;
    // End of variables declaration//GEN-END:variables
}
